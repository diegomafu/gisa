---
version: '3.8'
services:
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    entrypoint: [ "bash", "-c", "((sleep 30 && kafka-topics --create --topic gisa-topic --partitions 1 --replication-factor 1 --if-not-exists --zookeeper zookeeper:2181)&) && /etc/confluent/docker/run"]
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    
  mysqlsrv:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "mysql@123"
      MYSQL_DATABASE: "rundeck"
      MYSQL_USER: "mysql"
      MYSQL_PASSWORD: "mysql@123"
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./script:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    links:
      - mysqlsrv
    depends_on:
      - mysqlsrv
    ports:
      - 80:80
    environment:
      - PMA_ARBITRARY=1

  sqoop:
    image: ghcr.io/kasipavankumar/sqoop-docker:latest
    user: root
    environment:
      SQOOP_HOME: "/sqoop"
    entrypoint: [ "bash", "-c", "((bash /etc/bin/bootstrap-kumar.sh)&) && tail -f /dev/null"]
    ports:
      - 8088:8088
      - 8042:8042
      - 9000:9000
    volumes:
      - ./lib:/jar
      - ./sh:/etc/bin

#  sqoop:
#    image: ghcr.io/kasipavankumar/sqoop-docker:latest
#    #image: dvoros/hadoop:3.1.0
#    user: root
#    environment:
#      HOSTNAME: "localhost"
#      SQOOP_HOME: "/usr/local/sqoop"
#    #entrypoint: [ "bash", "-c", "((bash /etc/bin/bootstrap-dvoros.sh)&) && tail -f /dev/null"]
#    ports:
#      - 8088:8088
#      - 8042:8042
#      - 9000:9000
#    volumes:
#      - ./lib:/jar
#      - ./sh:/etc/bin

networks: 
  broker-kafka:
    driver: bridge 